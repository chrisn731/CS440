Assignment 2: Probabilistic Reasoning (Question 5)

How to setup your environment
========================================
To ensure proper usage on ilab please run the following commands in your terminal:
	$ export PATH="$PATH:/koko/system/anaconda/bin"
	$ source activate python38

Note: You may not need the above commands on some machines!

How to use
========================================

1. Generating ground truths
	* Simply call:
		$ python gen_truths.py
	* This will generate both world and relevant ground truth files
	* Ground truths are stored within the "results" folder and worlds are stored within
		the "graphs" folder.
	* Each world number is denoted as world(i) where "i" is the world number
	* Similarly, the ground truths generated by an action set is denoted as action(i)
		where "i" is the a set of actions in the world
		-> Example:
			--> world_file: graphs/world_file0.txt
			--> Relevant ground truth files: 
					results/world0_action0_result.txt
					-- or --
					results/world0_action5_result.txt
					-- etc. --

2. Heatmap visualization (PLEASE READ CAREFULLY)
	--- How to: Start the visualization ---
	* First, you must compile the relevant code for filter. To do this simply call 'make'
		$ make

	* Next, you can start up the visualization by calling:
		$ python main.py

	--- How To: Load a world ---
	* Once the graphical interface has started, you can go to the top left and do
		-> file > Open world > Select world file
			--> This will select the world
		-> file > Open actions > Select actions file
			--> This will select the actions file
		-> IMPORTANT NOTE: You must open the world FIRST and then the actions file SECOND
			--> If this is not followed, the program will not work to expectations.

	* With everything now setup, you should be able to locate the agent (the rover) 
		within the world.
	
	--- How To: Interact with the visualization ---
	* Once found, you can use the arrow buttons at the top of the program to iterate through
		his action sequence.
	
	* The strings on top represent the complete action/sensor readings for the entire experiment.
	
	--- How To: Find what does everything mean ---
	* When you click on the arrows, you will notice that a letter will be highlighted in red for
		both strings
		** This represents the reported action and sensor reading from the most recent move.
		** If you watch carefully, you can observe the agent (or rover) will sometimes not do
			the expected move or give the correct reading (as a result of the imperfect sensor
			and action readings that it gives back) as expected.
	
	* As for the grid, you will see colors start to change and swap around. Simply put:
		** Grey cells represent a blocked cell with 0 probability.
        ** White cells represent a very low probability.
        ** Blue cells represent low/medium probability.
        ** Light red cells represent medium/high probability.
        ** Dark red cells represent an extremely high probability.
	
3. Plot of Filter Error
	* To generate the filter error plot, simply call
		$ python calc_filter_err.py graphs results

		** 'graphs' is the directory in which you have your worlds stored.
		** 'results' is the directory in which you ahve stored all your
			ground truths.
	
	* After a bit of calculation, a plot will be presented to you.

4. Plot of Agent Cell Probability
	* To generate the filter error plot, simply call
		$ python calc_filter_err.py graphs results

		** 'graphs' is the directory in which you have your worlds stored.
		** 'results' is the directory in which you ahve stored all your
			ground truths.
	
	* After a bit of calculation, a plot will be presented to you.

Other Notes
========================================
* The code for filtering is all stored within "filter.c"
* The pictures within this directory are for the visualization to use.